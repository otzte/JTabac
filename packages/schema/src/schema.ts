/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/orders": {
    /** Get all reservations */
    get: operations["getOrders"];
    /** Create a new reservation */
    post: operations["createOrder"];
  };
  "/products": {
    /** Get all products */
    get: operations["getProducts"];
    /** Create a new product */
    post: operations["createProduct"];
  };
  "/users": {
    /** Get all Users */
    get: operations["getUsers"];
    /** Create a new User */
    post: operations["createUser"];
  };
  "/locations": {
    /** Get all locations */
    get: operations["getLocations"];
    /** Create a new location */
    post: operations["createLocation"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Product: {
      id?: number;
      name: string;
      /** @description a product with price of 0 is a donation */
      price: number;
    };
    Order: {
      id?: number;
      /** @description product id */
      productId?: number;
      /** @description user id of the requester */
      receiverUserId?: number;
      /** @description user id of the donor */
      donorUserId?: string;
      /** @enum {string} */
      status?: "created" | "paid" | "reserved" | "booked" | "reversed" | "pending" | "finished";
      /** @enum {string} */
      workflow?: "w1" | "w2" | "w3" | "w4";
    };
    User: {
      id?: number;
      name: string;
      /** @enum {string} */
      type: "donor" | "receiver" | "organizer";
    };
    Location: {
      /** @description user id of the location owner */
      user: number;
      name: string;
      street?: string;
      houseNo?: string;
      city?: string;
      zipCode?: string;
      lat?: number;
      lon?: number;
      type?: string;
      openingHoursText?: string;
      description?: string;
      offerTimeText?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get all reservations */
  getOrders: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Order"][];
        };
      };
    };
  };
  /** Create a new reservation */
  createOrder: {
    /** @description Order to create */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Order"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Order"];
        };
      };
    };
  };
  /** Get all products */
  getProducts: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Product"][];
        };
      };
    };
  };
  /** Create a new product */
  createProduct: {
    /** @description Product to create */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Product"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
    };
  };
  /** Get all Users */
  getUsers: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
    };
  };
  /** Create a new User */
  createUser: {
    /** @description User to create */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["User"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  /** Get all locations */
  getLocations: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Location"][];
        };
      };
    };
  };
  /** Create a new location */
  createLocation: {
    /** @description Location to create */
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Location"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["Location"];
        };
      };
    };
  };
}
